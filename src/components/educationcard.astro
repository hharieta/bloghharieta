---
interface Props {
  institution: string;
  area: string;
  summary: string;
  startDate: string;
  endDate: string | null;
  gpa: string;
  highlights: string[];
}

const { institution, area, summary, startDate, endDate, highlights } =
  Astro.props;

const formatter = new Intl.DateTimeFormat("en", {
  month: "long",
  year: "numeric",
});

const parseDate = (dateString: string) => {
  const dateParts = dateString.split("-");
  return new Date(Number(dateParts[0]), Number(dateParts[1]) - 1, Number(dateParts[2]));
}

const formattedStartDate = formatter.format(parseDate(startDate));
const formattedEndDate = endDate ? formatter.format(parseDate(endDate)) : "Today";

---

<div
  class="relative max-w-xl p-10 flex flex-col gap-10 border-l-2 border-foreground"
>
  <div class="cv-section md:col-span-2 flex flex-col gap-3">
    <div class="flex flex-col gap-1">
      <h3 class="text-muted-foreground text-slate-500 text-lg sm:text-normal">
        {institution}
      </h3>
      <h4 class="text-lg sm:text-normal md:text-xl tracking-tighter">
        {area}
      </h4>
    <time class="text-sm text-muted-foreground text-slate-500"
      >{formattedStartDate} - {formattedEndDate}</time
    >
  </div>
  <div
    class="relative flex flex-col gap-5 pb-4 text-muted-foreground md:col-span-3"
  >
    <p class="text-md sm:text-normal md:text-lg tracking-tighter">
      {summary}
    </p>
    <ul class="cv-section custom-list">
      {
        highlights.map((highlight) => (
          <li class="text-muted-foreground text-slate-500 text-md sm:text-normal">
            {highlight}
          </li>
        ))
      }
    </ul>
  </div>
  <svg class="absolute timeline-marker" xmlns="http://www.w3.org/2000/svg" width="38" height="38" viewBox="0 0 800 800" preserveAspectRatio="xMidYMid meet">
    <g transform="translate(150, 0)">
      <path class="st0" d="M481.875,299.344L512,292.219l-4.656-19.641l-24.25,5.734c0-0.328,0.016-0.641,0.016-0.969
          c0-38.078-10.531-72.781-28.969-102.359c15.438-53.938-13.438-124.547-13.438-124.547S387.813,73,357.719,100.297
          C327.109,91.063,292.578,88.094,256,88.094c-36.766,0-71.484,2.563-102.203,11.781c-30.156-27.109-82.5-49.438-82.5-49.438
          S42.406,121.063,57.859,175c-18.422,29.578-28.984,64.281-28.984,102.344c0,0.328,0.031,0.641,0.031,0.969l-24.25-5.734L0,292.219
          l30.109,7.125c2.672,23.578,9.672,44.75,20.234,63.422L12.875,377.75l7.484,18.75l41.203-16.484
          c39.797,53.141,111.969,81.547,194.438,81.547c82.453,0,154.641-28.406,194.438-81.547l41.203,16.484l7.484-18.75l-37.469-14.984
          C472.219,344.094,479.219,322.922,481.875,299.344z"/>
    </g>
  </svg>
</div>
<script src="../scripts/observer.js"></script>

<style>
  .timeline-marker {
    top: 0;
    left: -20px; /* Adjust as needed */
    top: -4px;
  }
  .custom-list {
    list-style-image: url('/images/bullet.svg');
  }
  .border-foreground {
    border-color: #000;
  }
  .bg-foreground {
    background-color: #000;
  }
  .left-\\[-7px\\] {
    left: -7px;
  }

  .cv-section {
  opacity: 0;
  transform: translateY(50px);
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}

.cv-section.visible {
  opacity: 1;
  transform: translateY(0);
}
</style>
